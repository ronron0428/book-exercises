library("nycflights13")
library("dplyr")
install.packages("nycflights13")
library("nycflights13")
library("dplyr")
flights_df <- flights
View(flights_df)
dep_delay_by-month <- group_by(
flights, month
)
dep_delay_by-month <- group_by(
flight, month
)
dep_delay_by-month <- group_by(
flights_df, month
)
flights_df <- flights
dep_delay_by-month <- group_by(
flights_df, month
)
dep_delay_by <- group_by(
flights_df, month
)
View(dep_delay_by)
dep_delay_by <- flights %>%
group_by(month) %>%
summarize(average_departure_delay = mean(dep_delay))
)
dep_delay_by <- flights %>%
group_by(month) %>%
summarize(average_departure_delay = mean(dep_delay))
View(dep_delay_by)
dep_delay_by <- flights %>%
group_by(month) %>%
summarize(average_departure_delay = mean(dep_delay, na.rm = TRUE))
View(dep_delay_by)
flights %>%
group_by(month) %>%
summarize(avg_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
filter(avg_delay == max(avg_dep_delay))
flights %>%
group_by(month) %>%
summarize(avg_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
filter(avg_delay == max(avg_dep_delay))
dep_delay_by_month <- flights %>%
group_by(month) %>%
summarize(avg_dep_delay = mean(dep_delay, na.rm = TRUE))
View(dep_delay_by_month)
filter(dep_delay_by_month, avg_delay == max(avg_dep_delay))
dep_delay_by_month <- flights %>%
group_by(month) %>%
summarize(avg_dep_delay = mean(dep_delay, na.rm = TRUE))
View(dep_delay_by_month)
filter(dep_delay_by_month, avg_dep_delay == max(avg_dep_delay))
plot(dep_delay_by_month)
filghts %>%
group_by(dest) %>%
summarize(
avg_arr_delay = mean (arr_Delay, na.rm = TRUE)
) %>%
filter(avg_arr_delay == max(avg_arr_delay))
filghts
flight %>%
flight %>%
group_by(dest) %>%
summarize(
avg_arr_delay = mean (arr_Delay, na.rm = TRUE)
) %>%
filter(avg_arr_delay == max(avg_arr_delay))
flights
flights %>%
group_by(dest)
flights %>%
group_by(dest) %>%
summarize(
avg_arr_delay = mean (arr_Delay, na.rm = TRUE)
)
flights %>%
group_by(dest) %>%
summarize(
avg_arr_delay = mean (arr_delay, na.rm = TRUE)
)
flights %>%
group_by(dest) %>%
summarize(
avg_arr_delay = mean (arr_delay, na.rm = TRUE)
) %>%
filter(avg_arr_delay == max(avg_arr_delay))
flights %>%
group_by(dest) %>%
summarize(
avg_arr_delay = mean (arr_delay, na.rm = TRUE)
) %>%
filter(avg_arr_delay == max(avg_arr_delay, na.rm = TRUE))
View(flights_df)
View(flights_df)
airports %>%
filter(faa == "CAE")
filter(airports, faa == "CAE")
flights %>%
group_by(dest) %>%
summarize(avg_speed = mean(distance/air_time))
flights %>%
group_by(dest) %>%
summarize(avg_speed = mean(distance/air_time, na.rm = TRUE))
flights %>%
group_by(dest) %>%
summarize(avg_speed = mean(distance/air_time, na.rm = TRUE)) %>%
filter(avg_speed == max(avg_speed,na.rm = TRUE))
filter(airports, faa == "ANC")
library("nycflights13")
library("dplyr")
flights %>%
group_by(dest) %>%
summarize(avg_arr_delay = mean(arr_delay, na.rm = TRUE))
avg_delay_df <-
flights %>%
group_by(dest) %>%
summarize(avg_arr_delay = mean(arr_delay, na.rm = TRUE))
View(avg_delay_df)
airports
avg_delay_df <-
flights %>%
group_by(dest) %>%
summarize(avg_arr_delay = mean(arr_delay, na.rm = TRUE)) %>%
rename(faa = dest)
left_join(avg_delay_df, airports, by = "faa")
avg_delay_df <-
flights %>%
group_by(dest) %>%
summarize(avg_arr_delay = mean(arr_delay, na.rm = TRUE)) %>%
rename(faa = dest)
View(avg_delay_df)
left_join(avg_delay_df, airports, by = "faa")
left_join(avg_delay_df, airports, by = "faa") %>%
select(faa, avg_delay_df, name)
left_join(avg_delay_df, airports, by = "faa") %>%
select(faa, avg_arr_delay, name)
airlines
flights %>%
group_by(carrier) %>%
summarize(avg_arr_delay = mean(arr_delay, na.rm = TRUE)) %>%
left_join(airlines, by = "carrier")
flights %>%
group_by(carrier) %>%
summarize(avg_arr_delay = mean(arr_delay, na.rm = TRUE)) %>%
left_join(airlines, by = "carrier") %>%
arrange(-avg_arr_delay)
#install.packages("dplyr")
#install.packages("tidyr")
library("dplyr")
library("tidyr")
#####print out variables!!
#### no bracket or dollar signs
#################
#### PART 1 #####
#################
# 1
projects_df <- read.csv("https://canvas.uw.edu/courses/1355751/files/61486325/download", stringsAsFactors = FALSE)
#2 --- features part im not really sure
nrow(projects_df)
print(colnames(projects_df))
#3 - did i do this right?
summary(projects_df)
#4 - two comments on what u discover!!
#comment 1
#comment 2
#################
#### PART 2 #####
#################
#1 see install and load statements at the very top of the file
#2
num_nothing_pledged <- nrow(filter(projects_df, pledged == 0.0))
#3
percent_successful <- nrow(filter(projects_df, state == "successful"))/nrow(projects_df)
#4
num_projects_2018 <- nrow(filter(projects_df, startsWith(deadline,"2018")))
#5 - right?
#no dollar signs tho
most_pledged <- summarize(
projects_df,
name = filter(filter(projects_df, pledged == max(projects_df$pledged)))$name ,
category = (filter(projects_df, pledged == max(projects_df$pledged)))$category
)
#6 --- need to make a summary and use the pipe operator
highest_goal_rows <- filter(projects_df, goal == max(projects_df$goal))
highest_goal_rows <- arrange(highest_goal_rows, category)
#7 --- doesnt work !!
failed_rows <- filter(projects_df, state == "failed")
highest_failed_row <- filter(failed_rows, pledged == max(failed_rows$pledged))
biggest_failure <- summarize(
failed_rows,
name == select(failed_rows, pledged == max(failed_rows$pledged), name),
pledged == max(failed_rows$pledged)
)
#################
#### PART 3 #####
#################
#1  - idk
categories <- group_by(
projects_df,
category
)
category_summary <- summarize(
categories,
category = category
)
#2
#3
#4
#5
#6
#7
#8
#9
#################
#### PART 4 #####
#################
#2
cex_df <- read.csv("data/cex_multiyear.csv", stringsAsFactors = FALSE)
View(cex_df)
#3
#(1) load tidyr package (see above)
#(2)
cex_long_df <- gather(
cex_df,
key = year,
value = spending,
-Item
)
#(3)
cex_long_df <- mutate(cex_long_df, year = substr(year, 2, 5))
#(4)
cex_wide_df <- spread(
cex_long_df,
key = Item,
value = spending
)
#4 - have to finish part 3 for this
all_spending <- left_join(
df 1,
df 2,
by = "year"
)
#5
View(categories)
category_summary <- summarize(
categories,
category = tally(category)
)
category_summary <- summarize(
categories,
category = tally(categories)
)
View(projects_df)
highest_avg_backers <- projects_df %>%
group_by(category) %>%
summarize(avg_backers = mean(backers, na.rm = TRUE)) %>%
filter(avg_backers == max(avg_backers))
View(highest_avg_backers)
flights %>%
group_by(dest) %>%
summarize(avg_speed = mean(distance/air_time, na.rm = TRUE))
flights %>%
group_by(dest)
projects_df %>%
group_by(category) %>%
summarize(avg_backers = mean(backers, na.rm = TRUE))
highest_avg_backers <- projects_df %>%
group_by(category) %>%
summarize(avg_backers = mean(backers, na.rm = TRUE)) %>%
filter(avg_backers == max(avg_backers, na.rm = TRUE), category)
highest_avg_backers <- projects_df %>%
group_by(category) %>%
summarize(avg_backers = mean(backers, na.rm = TRUE)) %>%
filter(avg_backers == max(avg_backers, na.rm = TRUE)) %>%
select(category)
View(highest_avg_backers)
highest_avg_backers <- projects_df %>%
group_by(category) %>%
summarize(avg_backers = mean(backers, na.rm = TRUE)) %>%
filter(avg_backers == max(avg_backers, na.rm = TRUE)) %>%
select("category")
highest_avg_backers <- projects_df %>%
group_by(category) %>%
summarize(avg_backers = mean(backers, na.rm = TRUE)) %>%
filter(avg_backers == max(avg_backers, na.rm = TRUE))
View(highest_avg_backers)
summarize(avg_backers = mean(backers, na.rm = TRUE))
projects_df %>%
group_by(category) %>%
summarize(avg_backers = mean(backers, na.rm = TRUE))
top_three_categories <- projects_df %>%
group_by(category) %>%
summarize(total_backers = sum(backers, na.rm = TRUE))
View(top_three_categories)
top_three_categories <- projects_df %>%
group_by(category) %>%
summarize(total_backers = sum(backers, na.rm = TRUE)) %>%
arrange(-total_backers)
top_three_categories <- projects_df %>%
group_by(category) %>%
summarize(total_backers = sum(backers, na.rm = TRUE)) %>%
arrange(-total_backers) %>%
top_n(3)
View(top_three_categories)
debugSource('~/a4-wrangling-data-ronron0428/assignment.R', echo=TRUE)
top_three_categories <- projects_df %>%
group_by(category) %>%
summarize(total_backers = sum(backers, na.rm = TRUE))
View(projects_df)
projects_df %>%
mutate(launched = substr(launched, 1, 4)))
projects_df %>%
mutate(launched = substr(launched, 1, 4))
popularity_by_year <- projects_df %>%
mutate(launched = substr(launched, 1, 4)) %>%
summarize(total_backers = sum(backers, na.rm = TRUE),
total_pledged = sum(pledged, na.rm = TRUE))
rename(launched = year)
popularity_by_year <- projects_df %>%
mutate(launched = substr(launched, 1, 4)) %>%
summarize(total_backers = sum(backers, na.rm = TRUE),
total_pledged = sum(pledged, na.rm = TRUE)) %>%
rename(launched = year)
popularity_by_year <- projects_df %>%
mutate(launched = substr(launched, 1, 4)) %>%
summarize(total_backers = sum(backers, na.rm = TRUE),
total_pledged = sum(pledged, na.rm = TRUE))
View(popularity_by_year)
popularity_by_year <- projects_df %>%
mutate(launched = substr(launched, 1, 4))
View(popularity_by_year)
debugSource('~/a4-wrangling-data-ronron0428/assignment.R', echo=TRUE)
popularity_by_year <- projects_df %>%
mutate(launched = substr(launched, 1, 4)) %>%
group_by(launched) %>%
summarize(total_backers = sum(backers, na.rm = TRUE),
total_pledged = sum(pledged, na.rm = TRUE)) %>%
rename(launched = year)
popularity_by_year <- projects_df %>%
mutate(launched = substr(launched, 1, 4)) %>%
group_by(launched) %>%
summarize(total_backers = sum(backers, na.rm = TRUE),
total_pledged = sum(pledged, na.rm = TRUE)) %>%
rename(launched = "year")
popularity_by_year <- projects_df %>%
mutate(launched = substr(launched, 1, 4)) %>%
group_by(launched) %>%
summarize(total_backers = sum(backers, na.rm = TRUE),
total_pledged = sum(pledged, na.rm = TRUE))
View(popularity_by_year)
popularity_by_year <- projects_df %>%
mutate(launched = substr(launched, 1, 4)) %>%
group_by(launched) %>%
summarize(total_backers = sum(backers, na.rm = TRUE),
total_pledged = sum(pledged, na.rm = TRUE))
most_popular_launch_day <- projects_df %>%
mutate(launched = weekdays(as.Date(launched)))
View(most_popular_launch_day)
most_popular_launch_day <- projects_df %>%
mutate(launched = weekdays(as.Date(launched))) %>%
group_by(launched) %>%
summarize(number_of_projects_launched = nrow())
View(most_popular_launch_day)
